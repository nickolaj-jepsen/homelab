apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: prometheus-cert
spec:
  commonName: "prometheus.k8s.nickolaj.com"
  secretName: prometheus-cert
  dnsNames:
    - "prometheus.k8s.nickolaj.com"
  issuerRef:
    name: letsencrypt # it's a precreated clusterissuer name, can also be "letsencrypt-staging" for testing.
    kind: ClusterIssuer
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: prometheus
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`prometheus.k8s.nickolaj.com`)
      kind: Rule
      middlewares:
      - name: traefik-basic-auth
      services:
        - name: prometheus-operated
          port: 9090
  tls:
    secretName: prometheus-cert
---
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: grafana-cert
spec:
  commonName: "grafana.k8s.nickolaj.com"
  secretName: grafana-cert
  dnsNames:
    - "grafana.k8s.nickolaj.com"
  issuerRef:
    name: letsencrypt # it's a precreated clusterissuer name, can also be "letsencrypt-staging" for testing.
    kind: ClusterIssuer
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: grafana
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`grafana.k8s.nickolaj.com`)
      kind: Rule
      middlewares:
      - name: traefik-basic-auth
      services:
        - name: prometheus-operator-grafana
          port: 80
  tls:
    secretName: grafana-cert